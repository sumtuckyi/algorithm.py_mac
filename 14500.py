# 배열은 최대 25만칸
# 회전이나 대칭을 취하면 가능한 테트로미노의 가짓수는 1 + 2 + 8 + 4 + 4 = 19가지..
cases = [
    [(1, 0), (2, 0), (2, 1)],
    [(0, 1), (0, 2), (1, 0)],
    [(0, 1), (1, 1), (2, 1)],
    [(1, 0), (1, -1), (1, -2)],
    [(0, 1), (1, 0), (2, 0)],
    [(1, 0), (1, 1), (1, 2)],
    [(1, 0), (2, 0), (2, -1)],
    [(0, 1), (0, 2), (1, 2)],
    [(0, 1), (0, 2), (1, 1)],
    [(1, -1), (1, 0), (2, 0)],
    [(1, -1), (1, 0), (1, 1)],
    [(1, 0), (2, 0), (1, 1)],
    [(1, 0), (1, 1), (2, 1)],
    [(0, 1), (-1, 1), (-1, 2)],
    [(1, 0), (1, -1), (2, -1)],
    [(0, 1), (1, 1), (1, 2)],
    [(0, 1), (0, 2), (0, 3)],
    [(0, 1), (1, 0), (1, 1)],
    [(1, 0), (2, 0), (3, 0)]
] # 총 18가지

N, M = map(int, input().split())
grid = []
for _ in range(N):
    row = list(map(int, input().split()))
    grid.append(row)
answer = 0
for x in range(N):
    for y in range(M):  # 모든 지점을 기준으로
        for case in cases:  # 18가지 모양을 적용
            total = grid[x][y]
            for i in range(3):
                nx, ny = x + case[i][0], y + case[i][1]
                if 0 <= nx < N and 0 <= ny < M:  # 범위 안에 있으면
                    total += grid[nx][ny]
            if answer < total:
                answer = total

print(answer)
